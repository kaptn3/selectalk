definitions:
  model.Achievement:
    properties:
      cost:
        type: number
      createdAt:
        type: string
      deletedAt:
        type: string
      expirationDate:
        type: string
      id:
        type: integer
      name:
        type: string
      updatedAt:
        type: string
    type: object
  model.Course:
    properties:
      award:
        type: number
      createdAt:
        type: string
      deletedAt:
        type: string
      id:
        type: integer
      kind:
        type: string
      name:
        type: string
      updatedAt:
        type: string
    type: object
  model.Task:
    properties:
      createdAt:
        type: string
      deletedAt:
        type: string
      expirationDate:
        type: string
      id:
        type: integer
      managerID:
        type: integer
      name:
        type: string
      score:
        type: integer
      taskPriority:
        $ref: '#/definitions/model.TaskPriority'
        type: object
      taskPriorityID:
        type: integer
      taskStatus:
        $ref: '#/definitions/model.TaskStatus'
        type: object
      taskStatusID:
        type: integer
      updatedAt:
        type: string
      userID:
        type: integer
    type: object
  model.TaskPriority:
    properties:
      createdAt:
        type: string
      deletedAt:
        type: string
      id:
        type: integer
      priority:
        type: string
      updatedAt:
        type: string
    type: object
  model.TaskStatus:
    properties:
      createdAt:
        type: string
      deletedAt:
        type: string
      id:
        type: integer
      status:
        type: string
      updatedAt:
        type: string
    type: object
  model.User:
    properties:
      account:
        type: string
      balance:
        type: number
      createdAt:
        type: string
      deletedAt:
        type: string
      department:
        type: string
      id:
        type: integer
      name:
        type: string
      position:
        type: string
      skill:
        $ref: '#/definitions/postgres.Jsonb'
        type: object
      tasks:
        items:
          $ref: '#/definitions/model.Task'
        type: array
      updatedAt:
        type: string
    type: object
  postgres.Jsonb:
    type: object
info:
  contact: {}
  license: {}
paths:
  /api/v1/achievements:
    get:
      description: Retrieve list of courses.
      operationId: get-courses
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/model.Course'
            type: array
        "400": {}
      summary: Get list of courses.
  /api/v1/ping:
    get:
      description: ping
      responses:
        "200": {}
        "400": {}
      summary: Ping
  /api/v1/tasks/{user_id}:
    get:
      description: Retrieve list of tasks using user identifier.
      operationId: get-tasks
      parameters:
      - description: User ID
        in: path
        name: user_id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/model.Task'
            type: array
        "400": {}
      summary: Get list of tasks by user identifier.
  /api/v1/users/{id}:
    get:
      description: Retrieve a user info.
      operationId: get-user
      parameters:
      - description: User ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.User'
        "400": {}
      summary: Get user.
swagger: "2.0"
